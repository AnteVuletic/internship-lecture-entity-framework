// <auto-generated />
using System;
using Lecture.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lecture.Data.Migrations
{
    [DbContext(typeof(RentACarDbContext))]
    partial class RentACarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Lecture.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1995, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseIdentifier = "12831121",
                            FirstName = "Ante",
                            LastName = "Antić",
                            Oib = "12382172389"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1998, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseIdentifier = "12831122",
                            FirstName = "Matija",
                            LastName = "Luketin",
                            Oib = "12382172159"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1993, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseIdentifier = "12831123",
                            FirstName = "Krešimir",
                            LastName = "Čondić",
                            Oib = "12382172129"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1996, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseIdentifier = "12831124",
                            FirstName = "Roko",
                            LastName = "Radanović",
                            Oib = "12382172139"
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mate",
                            LastName = "Matić"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jure",
                            LastName = "Jurić"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Šime",
                            LastName = "Šimić"
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfRegistration = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfRegistration = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfRegistration = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfRegistration = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateOfRegistration = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 6,
                            DateOfRegistration = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 7,
                            DateOfRegistration = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 8,
                            DateOfRegistration = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 8
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndOfRent")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentRateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartOfRent")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RentRateId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Rents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 2,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            EmployeeId = 3,
                            EndOfRent = new DateTime(2020, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 2,
                            EmployeeId = 3,
                            EndOfRent = new DateTime(2020, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 3,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 3,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 3,
                            EmployeeId = 3,
                            EndOfRent = new DateTime(2020, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 4,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 4,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 4,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 4
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 4,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 5
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 2,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 6
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 3,
                            EmployeeId = 3,
                            EndOfRent = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 7
                        },
                        new
                        {
                            Id = 16,
                            CustomerId = 2,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 8
                        },
                        new
                        {
                            Id = 17,
                            CustomerId = 1,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 18,
                            CustomerId = 2,
                            EmployeeId = 3,
                            EndOfRent = new DateTime(2020, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 19,
                            CustomerId = 3,
                            EmployeeId = 2,
                            EndOfRent = new DateTime(2020, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 2,
                            StartOfRent = new DateTime(2020, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 3
                        },
                        new
                        {
                            Id = 20,
                            CustomerId = 4,
                            EmployeeId = 1,
                            EndOfRent = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentRateId = 1,
                            StartOfRent = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleId = 4
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.RentRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentRateType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RentRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 200m,
                            CreatedAt = new DateTime(2021, 1, 10, 15, 17, 56, 387, DateTimeKind.Local).AddTicks(224),
                            RentRateType = 1
                        },
                        new
                        {
                            Id = 2,
                            Cost = 300m,
                            CreatedAt = new DateTime(2021, 1, 10, 15, 17, 56, 389, DateTimeKind.Local).AddTicks(1261),
                            RentRateType = 0
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Kilometers")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Kilometers = 0,
                            VehicleModelId = 1
                        },
                        new
                        {
                            Id = 2,
                            Kilometers = 0,
                            VehicleModelId = 1
                        },
                        new
                        {
                            Id = 3,
                            Kilometers = 20,
                            VehicleModelId = 2
                        },
                        new
                        {
                            Id = 4,
                            Kilometers = 205,
                            VehicleModelId = 2
                        },
                        new
                        {
                            Id = 5,
                            Kilometers = 265,
                            VehicleModelId = 2
                        },
                        new
                        {
                            Id = 6,
                            Kilometers = 205,
                            VehicleModelId = 3
                        },
                        new
                        {
                            Id = 7,
                            Kilometers = 205,
                            VehicleModelId = 4
                        },
                        new
                        {
                            Id = 8,
                            Kilometers = 205,
                            VehicleModelId = 5
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Yamaha"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Citroen"
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "Up",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "Golf",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Name = "Cayenne",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            Name = "T-Max",
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 4,
                            Name = "Berlingo",
                            VehicleType = 2
                        });
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Registration", b =>
                {
                    b.HasOne("Lecture.Data.Entities.Models.Vehicle", "Vehicle")
                        .WithMany("Registrations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Rent", b =>
                {
                    b.HasOne("Lecture.Data.Entities.Models.Customer", "Customer")
                        .WithMany("Rents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lecture.Data.Entities.Models.Employee", "Employee")
                        .WithMany("Rents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lecture.Data.Entities.Models.RentRate", "RentRate")
                        .WithMany("Rents")
                        .HasForeignKey("RentRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lecture.Data.Entities.Models.Vehicle", "Vehicle")
                        .WithMany("Rents")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("RentRate");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Vehicle", b =>
                {
                    b.HasOne("Lecture.Data.Entities.Models.VehicleModel", "VehicleModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.VehicleModel", b =>
                {
                    b.HasOne("Lecture.Data.Entities.Models.VehicleBrand", "Brand")
                        .WithMany("VehicleModels")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Employee", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.RentRate", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.Vehicle", b =>
                {
                    b.Navigation("Registrations");

                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.VehicleBrand", b =>
                {
                    b.Navigation("VehicleModels");
                });

            modelBuilder.Entity("Lecture.Data.Entities.Models.VehicleModel", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
